/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2020-05-05 09:26:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import factory.DAOFactory;
import vo.Messboard;
import java.text.*;
import java.util.*;

public final class messBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("vo.Messboard");
    _jspx_imports_classes.add("factory.DAOFactory");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>研招信息网——留言板</title>\r\n");
      out.write("</head>\r\n");
      out.write("\t");
      vo.Users user = null;
      synchronized (session) {
        user = (vo.Users) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (user == null){
          user = new vo.Users();
          _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
String str=user.getID(); 
      out.write('\r');
      out.write('\n');
      out.write('	');
String role=user.getRole(); 
      out.write('\r');
      out.write('\n');
      out.write('	');
if(str!=null){out.print("欢迎您,"+role+":"+ str+"。");}
      out.write("\r\n");
      out.write("<body style=\"background-color:rgb(192,192,192);\">\r\n");

List<Messboard> all = DAOFactory.getIMessboardDAOInstance().findAll();
Messboard mess = null;
Iterator<Messboard> iter = all.iterator();



      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form method=\"post\" style=\"position: absolute;left: 50%;top: 60px;transform: translate(-50%,0);\">\r\n");
      out.write("<h1 style=\"font-size: 50px;font-family: kaiti;margin-left: 22%\">留言交流板</h1>\r\n");
      out.write("\r\n");
      out.write("<table border=\"0\"  autocapitalize=\"on\" style=\"font-family:fangsong;font-size:22px;border-spacing: 3px\">\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("<td width=\"60\">编号</td>\r\n");
      out.write("<td width=\"60\">ID</td>\r\n");
      out.write("<td width=\"90\">昵称</td>\r\n");
      out.write("<td width=\"600\">留言内容</td>\r\n");
      out.write("<td width=\"200\">留言时间</td>\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");

while(iter.hasNext()){
Messboard mess2 = iter.next() ;

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("<td>");
      out.print(mess2.getNO());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(mess2.getID());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(mess2.getNickname());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(mess2.getMessage());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(mess2.getReleaseTime());
      out.write("</td>\r\n");
      out.write("</tr>\r\n");

}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<button type=\"button\" onclick=\"location.href='../html/insertMess.html'\" style=\"margin-top: 10%;margin-left:200px;width: 80px;height: 40px;\">留言</button>\r\n");
      out.write("<a target=\"_blank\" href=\"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=t9vCz97A0tmGjo6O98bGmdTY2g\" style=\"text-decoration:none;margin-left: 200px;\"><img src=\"http://rescdn.qqmail.com/zh_CN/htmledition/images/function/qm_open/ico_mailme_12.png\"/></a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
