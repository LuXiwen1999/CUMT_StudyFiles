/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2020-04-23 08:42:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch7.dao;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cumt.daodemo.factory.*;
import cumt.daodemo.vo.*;
import java.text.*;
import java.util.*;

public final class stu_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("cumt.daodemo.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("cumt.daodemo.factory");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head><title>list</title></head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");

String ckeyWord = request.getParameter("ckw") ;
String ikeyWord = request.getParameter("ikw") ;
List<Stu> all = DAOFactory.getIStuDAOInstance().findBySclass(ckeyWord) ;
Stu  stu =null;
stu= DAOFactory.getIStuDAOInstance().findById(ikeyWord);
Iterator<Stu> iter = all.iterator() ;


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form action=\"stu_list.jsp\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t按班级查询：<br>\r\n");
      out.write("请输入查询关键字：\r\n");
      out.write("\t<select name=\"ckw\">\r\n");
      out.write("\t<option value=\"0\">请选择一个班级\r\n");
      out.write("\t<option value=\"计科一班\">计科一班\r\n");
      out.write("\t<option value=\"计科二班\">计科二班\r\n");
      out.write("\t<option value=\"计科三班\">计科三班\r\n");
      out.write("\t<option value=\"计科四班\">计科四班\r\n");
      out.write("\t</select>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("按学号查询：<br>\r\n");
      out.write("请输入查询关键字：\r\n");
      out.write("<input type=\"text\" name=\"ikw\">\r\n");
      out.write("<input type=\"submit\" value=\"查询\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\" width=\"80%\"> \r\n");
      out.write("<tr>\r\n");
      out.write("<td>学号</td><td>姓名</td><td>年龄</td><td>性别</td><td>班级</td>\r\n");
      out.write("</tr>\r\n");

if(stu!=null)
{

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print(stu.getSno());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(stu.getSname());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(stu.getSage());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(stu.getSsex());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(stu.getSclass());
      out.write("</td>\r\n");
      out.write("</tr>\r\n");


}



      out.write('\r');
      out.write('\n');

while(iter.hasNext()){
Stu sstu = iter.next() ;

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\r\n");
      out.write("<td>");
      out.print(sstu.getSno());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(sstu.getSname());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(sstu.getSage());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(sstu.getSsex());
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(sstu.getSclass());
      out.write("</td>\r\n");
      out.write("</tr>\r\n");

}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
